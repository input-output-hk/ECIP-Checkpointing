#!/usr/bin/env bash
set -euo pipefail

tmp=$(mktemp -d)
trap 'rm -rf "$tmp"' exit

if [[ ! -f cabal.project.srcs ]]; then
  # We later mark cabal.project as not having any changes, since we remove
  # source-repository-package sections from it but don't want the user to commit that
  # But if the user already has changes to it, that would make them not commit their own changes too
  # So make the user either stage or commit the changes to prevent this
  if ! git diff --exit-code --quiet cabal.project; then
    echo "cabal.project has unstaged changes. Stage or commit them first to use this script" >&2
    exit 1
  fi
  echo "Setting up cabal.project to work with nix-shell" >&2

  # Splits the file at the first occurence of source-repository-package
  csplit -s -f "$tmp/cabal.project.split." cabal.project /^source-repository-package/
  mv "$tmp/cabal.project.split.00" cabal.project
  mv "$tmp/cabal.project.split.01" cabal.project.srcs

  # Prevent modification of these files since we later mark them as not having any changes
  chmod -w cabal.project cabal.project.srcs

  # In order to prevent the user from committing the changes to cabal.project, tell git that it should assume it wasn't changed
  git update-index --assume-unchanged cabal.project
else
  echo "Undoing cabal.project setup for nix-shell" >&2

  # Combine the split files into one again
  cat cabal.project cabal.project.srcs > "$tmp/cabal.project"
  chmod +w cabal.project cabal.project.srcs
  rm cabal.project.srcs
  mv "$tmp/cabal.project" cabal.project

  # Tell git to track changes to cabal.project again
  git update-index --no-assume-unchanged cabal.project
fi
